[{"E:\\Github desktop\\aoblog\\src\\api\\index.ts":"1","E:\\Github desktop\\aoblog\\src\\pages\\Login\\index.tsx":"2","E:\\Github desktop\\aoblog\\src\\services\\Login\\index.ts":"3","E:\\Github desktop\\aoblog\\src\\pages\\Register\\index.tsx":"4"},{"size":3427,"mtime":1716722078807},{"size":2859,"mtime":1716722053055,"results":"5","hashOfConfig":"6"},{"size":350,"mtime":1716722053058,"results":"7","hashOfConfig":"6"},{"size":2590,"mtime":1716722583348,"results":"8","hashOfConfig":"6"},{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11ggfvz",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Github desktop\\aoblog\\src\\pages\\Login\\index.tsx",["18","19","20","21"],[],"E:\\Github desktop\\aoblog\\src\\services\\Login\\index.ts",["22","23"],[],"E:\\Github desktop\\aoblog\\src\\pages\\Register\\index.tsx",["24","25","26","27"],[],{"ruleId":"28","severity":1,"message":"29","line":18,"column":34,"nodeType":"30","messageId":"31","endLine":18,"endColumn":35},{"ruleId":"28","severity":1,"message":"32","line":18,"column":64,"nodeType":"30","messageId":"31","endLine":18,"endColumn":65},{"ruleId":"28","severity":1,"message":"33","line":20,"column":41,"nodeType":"30","messageId":"31","endLine":20,"endColumn":42},{"ruleId":"28","severity":1,"message":"34","line":20,"column":71,"nodeType":"30","messageId":"31","endLine":20,"endColumn":73},{"ruleId":"35","severity":1,"message":"36","line":6,"column":13,"nodeType":"37","messageId":"38","endLine":6,"endColumn":16,"suggestions":"39"},{"ruleId":"35","severity":1,"message":"36","line":13,"column":13,"nodeType":"37","messageId":"38","endLine":13,"endColumn":16,"suggestions":"40"},{"ruleId":"28","severity":1,"message":"29","line":16,"column":32,"nodeType":"30","messageId":"31","endLine":16,"endColumn":33},{"ruleId":"28","severity":1,"message":"32","line":16,"column":62,"nodeType":"30","messageId":"31","endLine":16,"endColumn":63},{"ruleId":"28","severity":1,"message":"33","line":18,"column":39,"nodeType":"30","messageId":"31","endLine":18,"endColumn":40},{"ruleId":"28","severity":1,"message":"34","line":18,"column":69,"nodeType":"30","messageId":"31","endLine":18,"endColumn":71},"@typescript-eslint/no-magic-numbers","No magic number: 2.","Literal","noMagic","No magic number: 5.","No magic number: 7.","No magic number: 17.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["41","42"],["43","44"],{"messageId":"45","fix":"46","desc":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"45","fix":"51","desc":"47"},{"messageId":"48","fix":"52","desc":"50"},"suggestUnknown",{"range":"53","text":"54"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"55","text":"56"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"57","text":"54"},{"range":"58","text":"56"},[137,140],"unknown",[137,140],"never",[292,295],[292,295]]